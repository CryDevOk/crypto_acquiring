version: "3.5"


services:
  postgres:
    image: postgres:16.1
    hostname: postgres
    container_name: postgres
    command: postgres -c 'max_connections=4000'
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      PGDATA: "/pgdata"
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - pgdata:/pgdata
    networks:
      - acquiring

  proc_api:
    image: proc_api:latest
    container_name: proc_api
    env_file:
      - .env_proc_api
    tty: true
    command: ["/bin/bash", "./entrypoint.sh"]
    restart: always
    networks:
      - acquiring
    sysctls:
      net.core.somaxconn: 4096
    volumes:
      - /var/log/proc_api:/app/logs
      - /var/log/proc_api/openresty:/usr/local/openresty/nginx/logs

  eth_sepolia:
    image: proc_eth:latest
    container_name: eth_sepolia
    env_file:
      - .env_proc_eth_sepolia
    command: ["/bin/bash", "./entrypoint.sh"]
    restart: always
    tty: true
    networks:
      - acquiring
    volumes:
      - /var/log/eth_sepolia:/app/logs

networks:
  acquiring:
    name: acquiring
    driver: bridge

volumes:
  static_storage:
    name: static_storage
    driver: local
  pgdata:
    name: pgdata
    driver: local